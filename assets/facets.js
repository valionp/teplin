/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => {
  // webpackBootstrap
  /******/ var __webpack_modules__ = {
    /***/ "./src/js/components/facets.js":
      /*!*************************************!*\
  !*** ./src/js/components/facets.js ***!
  \*************************************/
      /***/ () => {
        eval(
          "class FacetFiltersForm extends HTMLElement {\n  constructor() {\n    super();\n    this.onActiveFilterClick = this.onActiveFilterClick.bind(this);\n\n    this.debouncedOnSubmit = debounce((event) => {\n      this.onSubmitHandler(event);\n    }, 500);\n\n    const facetForm = this.querySelector('form');\n    facetForm.addEventListener('input', this.debouncedOnSubmit.bind(this));\n\n    const facetWrapper = this.querySelector('#FacetsWrapperDesktop');\n    if (facetWrapper) facetWrapper.addEventListener('keyup', onKeyUpEscape);\n  }\n\n  static setListeners() {\n    const onHistoryChange = (event) => {\n      const searchParams = event.state ? event.state.searchParams : FacetFiltersForm.searchParamsInitial;\n      if (searchParams === FacetFiltersForm.searchParamsPrev) return;\n      FacetFiltersForm.renderPage(searchParams, null, false);\n    };\n    window.addEventListener('popstate', onHistoryChange);\n  }\n\n  static toggleActiveFacets(disable = true) {\n    document.querySelectorAll('.js-facet-remove').forEach((element) => {\n      element.classList.toggle('disabled', disable);\n    });\n  }\n\n  static renderPage(searchParams, event, updateURLHash = true) {\n    FacetFiltersForm.searchParamsPrev = searchParams;\n    const sections = FacetFiltersForm.getSections();\n    const countContainer = document.getElementById('ProductCount');\n    const countContainerDesktop = document.getElementById('ProductCountDesktop');\n    const loadingSpinners = document.querySelectorAll(\n      '.facets-container .loading__spinner, facet-filters-form .loading__spinner'\n    );\n    loadingSpinners.forEach((spinner) => spinner.classList.remove('hidden'));\n    document.getElementById('ProductGridContainer').querySelector('.collection').classList.add('loading');\n    if (countContainer) {\n      countContainer.classList.add('loading');\n    }\n    if (countContainerDesktop) {\n      countContainerDesktop.classList.add('loading');\n    }\n\n    sections.forEach((section) => {\n      const url = `${window.location.pathname}?section_id=${section.section}&${searchParams}`;\n      const filterDataUrl = (element) => element.url === url;\n\n      FacetFiltersForm.filterData.some(filterDataUrl)\n        ? FacetFiltersForm.renderSectionFromCache(filterDataUrl, event)\n        : FacetFiltersForm.renderSectionFromFetch(url, event);\n    });\n\n    if (updateURLHash) FacetFiltersForm.updateURLHash(searchParams);\n  }\n\n  static renderSectionFromFetch(url, event) {\n    fetch(url)\n      .then((response) => response.text())\n      .then((responseText) => {\n        const html = responseText;\n        FacetFiltersForm.filterData = [...FacetFiltersForm.filterData, { html, url }];\n        FacetFiltersForm.renderFilters(html, event);\n        FacetFiltersForm.renderProductGridContainer(html);\n        FacetFiltersForm.renderProductCount(html);\n        if (typeof initializeScrollAnimationTrigger === 'function') initializeScrollAnimationTrigger(html.innerHTML);\n      });\n  }\n\n  static renderSectionFromCache(filterDataUrl, event) {\n    const html = FacetFiltersForm.filterData.find(filterDataUrl).html;\n    FacetFiltersForm.renderFilters(html, event);\n    FacetFiltersForm.renderProductGridContainer(html);\n    FacetFiltersForm.renderProductCount(html);\n    if (typeof initializeScrollAnimationTrigger === 'function') initializeScrollAnimationTrigger(html.innerHTML);\n  }\n\n  static renderProductGridContainer(html) {\n    document.getElementById('ProductGridContainer').innerHTML = new DOMParser()\n      .parseFromString(html, 'text/html')\n      .getElementById('ProductGridContainer').innerHTML;\n\n    document\n      .getElementById('ProductGridContainer')\n      .querySelectorAll('.scroll-trigger')\n      .forEach((element) => {\n        element.classList.add('scroll-trigger--cancel');\n      });\n  }\n\n  static renderProductCount(html) {\n    const count = new DOMParser().parseFromString(html, 'text/html').getElementById('ProductCount').innerHTML;\n    const container = document.getElementById('ProductCount');\n    const containerDesktop = document.getElementById('ProductCountDesktop');\n    container.innerHTML = count;\n    container.classList.remove('loading');\n    if (containerDesktop) {\n      containerDesktop.innerHTML = count;\n      containerDesktop.classList.remove('loading');\n    }\n    const loadingSpinners = document.querySelectorAll(\n      '.facets-container .loading__spinner, facet-filters-form .loading__spinner'\n    );\n    loadingSpinners.forEach((spinner) => spinner.classList.add('hidden'));\n  }\n\n  static renderFilters(html, event) {\n    const parsedHTML = new DOMParser().parseFromString(html, 'text/html');\n    const facetDetailsElementsFromFetch = parsedHTML.querySelectorAll(\n      '#FacetFiltersForm .js-filter, #FacetFiltersFormMobile .js-filter, #FacetFiltersPillsForm .js-filter'\n    );\n    const facetDetailsElementsFromDom = document.querySelectorAll(\n      '#FacetFiltersForm .js-filter, #FacetFiltersFormMobile .js-filter, #FacetFiltersPillsForm .js-filter'\n    );\n\n    // Remove facets that are no longer returned from the server\n    Array.from(facetDetailsElementsFromDom).forEach((currentElement) => {\n      if (!Array.from(facetDetailsElementsFromFetch).some(({ id }) => currentElement.id === id)) {\n        currentElement.remove();\n      }\n    });\n\n    const matchesId = (element) => {\n      const jsFilter = event ? event.target.closest('.js-filter') : undefined;\n      return jsFilter ? element.id === jsFilter.id : false;\n    };\n    const facetsToRender = Array.from(facetDetailsElementsFromFetch).filter((element) => !matchesId(element));\n    const countsToRender = Array.from(facetDetailsElementsFromFetch).find(matchesId);\n\n    facetsToRender.forEach((elementToRender, index) => {\n      const currentElement = document.getElementById(elementToRender.id);\n      // Element already rendered in the DOM so just update the innerHTML\n      if (currentElement) {\n        document.getElementById(elementToRender.id).innerHTML = elementToRender.innerHTML;\n      } else {\n        if (index > 0) {\n          const { className: previousElementClassName, id: previousElementId } = facetsToRender[index - 1];\n          // Same facet type (eg horizontal/vertical or drawer/mobile)\n          if (elementToRender.className === previousElementClassName) {\n            document.getElementById(previousElementId).after(elementToRender);\n            return;\n          }\n        }\n\n        if (elementToRender.parentElement) {\n          document.querySelector(`#${elementToRender.parentElement.id} .js-filter`).before(elementToRender);\n        }\n      }\n    });\n\n    FacetFiltersForm.renderActiveFacets(parsedHTML);\n    FacetFiltersForm.renderAdditionalElements(parsedHTML);\n\n    if (countsToRender) {\n      const closestJSFilterID = event.target.closest('.js-filter').id;\n\n      if (closestJSFilterID) {\n        FacetFiltersForm.renderCounts(countsToRender, event.target.closest('.js-filter'));\n        FacetFiltersForm.renderMobileCounts(countsToRender, document.getElementById(closestJSFilterID));\n\n        const newFacetDetailsElement = document.getElementById(closestJSFilterID);\n        const newElementSelector = newFacetDetailsElement.classList.contains('mobile-facets__details')\n          ? `.mobile-facets__close-button`\n          : `.facets__summary`;\n        const newElementToActivate = newFacetDetailsElement.querySelector(newElementSelector);\n        if (newElementToActivate) newElementToActivate.focus();\n      }\n    }\n  }\n\n  static renderActiveFacets(html) {\n    const activeFacetElementSelectors = ['.active-facets-mobile', '.active-facets-desktop'];\n\n    activeFacetElementSelectors.forEach((selector) => {\n      const activeFacetsElement = html.querySelector(selector);\n      if (!activeFacetsElement) return;\n      document.querySelector(selector).innerHTML = activeFacetsElement.innerHTML;\n    });\n\n    FacetFiltersForm.toggleActiveFacets(false);\n  }\n\n  static renderAdditionalElements(html) {\n    const mobileElementSelectors = ['.mobile-facets__open', '.mobile-facets__count', '.sorting'];\n\n    mobileElementSelectors.forEach((selector) => {\n      if (!html.querySelector(selector)) return;\n      document.querySelector(selector).innerHTML = html.querySelector(selector).innerHTML;\n    });\n\n    document.getElementById('FacetFiltersFormMobile').closest('menu-drawer').bindEvents();\n  }\n\n  static renderCounts(source, target) {\n    const targetSummary = target.querySelector('.facets__summary');\n    const sourceSummary = source.querySelector('.facets__summary');\n\n    if (sourceSummary && targetSummary) {\n      targetSummary.outerHTML = sourceSummary.outerHTML;\n    }\n\n    const targetHeaderElement = target.querySelector('.facets__header');\n    const sourceHeaderElement = source.querySelector('.facets__header');\n\n    if (sourceHeaderElement && targetHeaderElement) {\n      targetHeaderElement.outerHTML = sourceHeaderElement.outerHTML;\n    }\n\n    const targetWrapElement = target.querySelector('.facets-wrap');\n    const sourceWrapElement = source.querySelector('.facets-wrap');\n\n    if (sourceWrapElement && targetWrapElement) {\n      const isShowingMore = Boolean(target.querySelector('show-more-button .label-show-more.hidden'));\n      if (isShowingMore) {\n        sourceWrapElement\n          .querySelectorAll('.facets__item.hidden')\n          .forEach((hiddenItem) => hiddenItem.classList.replace('hidden', 'show-more-item'));\n      }\n\n      targetWrapElement.outerHTML = sourceWrapElement.outerHTML;\n    }\n  }\n\n  static renderMobileCounts(source, target) {\n    const targetFacetsList = target.querySelector('.mobile-facets__list');\n    const sourceFacetsList = source.querySelector('.mobile-facets__list');\n\n    if (sourceFacetsList && targetFacetsList) {\n      targetFacetsList.outerHTML = sourceFacetsList.outerHTML;\n    }\n  }\n\n  static updateURLHash(searchParams) {\n    history.pushState({ searchParams }, '', `${window.location.pathname}${searchParams && '?'.concat(searchParams)}`);\n  }\n\n  static getSections() {\n    return [\n      {\n        section: document.getElementById('product-grid').dataset.id,\n      },\n    ];\n  }\n\n  createSearchParams(form) {\n    const formData = new FormData(form);\n    return new URLSearchParams(formData).toString();\n  }\n\n  onSubmitForm(searchParams, event) {\n    FacetFiltersForm.renderPage(searchParams, event);\n  }\n\n  onSubmitHandler(event) {\n    event.preventDefault();\n    const sortFilterForms = document.querySelectorAll('facet-filters-form form');\n    if (event.srcElement.className == 'mobile-facets__checkbox') {\n      const searchParams = this.createSearchParams(event.target.closest('form'));\n      this.onSubmitForm(searchParams, event);\n    } else {\n      const forms = [];\n      const isMobile = event.target.closest('form').id === 'FacetFiltersFormMobile';\n\n      sortFilterForms.forEach((form) => {\n        if (!isMobile) {\n          if (form.id === 'FacetSortForm' || form.id === 'FacetFiltersForm' || form.id === 'FacetSortDrawerForm') {\n            const noJsElements = document.querySelectorAll('.no-js-list');\n            noJsElements.forEach((el) => el.remove());\n            forms.push(this.createSearchParams(form));\n          }\n        } else if (form.id === 'FacetFiltersFormMobile') {\n          forms.push(this.createSearchParams(form));\n        }\n      });\n      this.onSubmitForm(forms.join('&'), event);\n    }\n  }\n\n  onActiveFilterClick(event) {\n    event.preventDefault();\n    FacetFiltersForm.toggleActiveFacets();\n    const url =\n      event.currentTarget.href.indexOf('?') == -1\n        ? ''\n        : event.currentTarget.href.slice(event.currentTarget.href.indexOf('?') + 1);\n    FacetFiltersForm.renderPage(url);\n  }\n}\n\nFacetFiltersForm.filterData = [];\nFacetFiltersForm.searchParamsInitial = window.location.search.slice(1);\nFacetFiltersForm.searchParamsPrev = window.location.search.slice(1);\ncustomElements.define('facet-filters-form', FacetFiltersForm);\nFacetFiltersForm.setListeners();\n\nclass PriceRange extends HTMLElement {\n  constructor() {\n    super();\n    this.querySelectorAll('input').forEach((element) =>\n      element.addEventListener('change', this.onRangeChange.bind(this))\n    );\n    this.setMinAndMaxValues();\n  }\n\n  onRangeChange(event) {\n    this.adjustToValidValues(event.currentTarget);\n    this.setMinAndMaxValues();\n  }\n\n  setMinAndMaxValues() {\n    const inputs = this.querySelectorAll('input');\n    const minInput = inputs[0];\n    const maxInput = inputs[1];\n    if (maxInput.value) minInput.setAttribute('max', maxInput.value);\n    if (minInput.value) maxInput.setAttribute('min', minInput.value);\n    if (minInput.value === '') maxInput.setAttribute('min', 0);\n    if (maxInput.value === '') minInput.setAttribute('max', maxInput.getAttribute('max'));\n  }\n\n  adjustToValidValues(input) {\n    const value = Number(input.value);\n    const min = Number(input.getAttribute('min'));\n    const max = Number(input.getAttribute('max'));\n\n    if (value < min) input.value = min;\n    if (value > max) input.value = max;\n  }\n}\n\ncustomElements.define('price-range', PriceRange);\n\nclass FacetRemove extends HTMLElement {\n  constructor() {\n    super();\n    const facetLink = this.querySelector('a');\n    facetLink.setAttribute('role', 'button');\n    facetLink.addEventListener('click', this.closeFilter.bind(this));\n    facetLink.addEventListener('keyup', (event) => {\n      event.preventDefault();\n      if (event.code.toUpperCase() === 'SPACE') this.closeFilter(event);\n    });\n  }\n\n  closeFilter(event) {\n    event.preventDefault();\n    const form = this.closest('facet-filters-form') || document.querySelector('facet-filters-form');\n    form.onActiveFilterClick(event);\n  }\n}\n\ncustomElements.define('facet-remove', FacetRemove);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/components/facets.js\n"
        );

        /***/
      },

    /******/
  };
  /************************************************************************/
  /******/
  /******/ // startup
  /******/ // Load entry module and return exports
  /******/ // This entry module can't be inlined because the eval-source-map devtool is used.
  /******/ var __webpack_exports__ = {};
  /******/ __webpack_modules__["./src/js/components/facets.js"]();
  /******/
  /******/
})();
